name: CI  # Nom de la pipeline CI

on:
  push:  # Déclenche la pipeline lorsqu'un push est effectué sur la branche main
    branches:
      - main
  pull_request:  # Déclenche également la pipeline pour les pull requests sur la branche main
    branches:
      - main

jobs:
  build:  # Définition du job de build
    runs-on: ubuntu-latest  # Utilisation d'une machine Ubuntu

    services:  # Définition du service MySQL utilisé
      mysql:
        image: mysql:5.7
        env:  # Variables d'environnement pour le service MySQL
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    env:  # Variables d'environnement pour l'application
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/symfony_test

    steps:  # Étapes du job build
    - name: Checkout code  # Étape pour récupérer le code du repository
      uses: actions/checkout@v2

    - name: Set up PHP 8.2  # Installation de PHP 8.2
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo_mysql
        tools: composer  # Utilisation de Composer pour les dépendances PHP

    - name: Install Composer dependencies  # Installation des dépendances Composer
      run: rm composer.lock && composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Create .env.test.local  # Création du fichier .env.test.local pour les tests
      run: |
        echo 'DATABASE_URL="mysql://root:root@127.0.0.1:3306/symfony_test"' > .env.test.local

    - name: Run database migrations  # Exécution des migrations de base de données
      run: php bin/console

  analyze-static-code:  # Définition du job d'analyse de code statique
    runs-on: ubuntu-latest
    needs: build  # Dépend du job build pour s'exécuter après

    steps:  # Étapes du job d'analyse de code statique
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP 8.2 and tools for static analysis  # Installation de PHP 8.2 et des outils d'analyse statique
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo_mysql
        tools: phpstan  # Utilisation de PHPStan pour l'analyse statique

    - name: Install dependencies  # Installation des dépendances PHP
      run: rm composer.lock && composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Run static analysis  # Exécution de l'analyse statique avec PHPStan
      run: vendor/bin/phpstan analyse ./public/index.php

  run-unit-tests:  # Définition du job pour exécuter les tests unitaires
    runs-on: ubuntu-latest
    needs: build  # Dépend du job build pour s'exécuter après

    steps:  # Étapes du job pour les tests unitaires
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up PHP 8.2 and PHPUnit  # Installation de PHP 8.2 et PHPUnit
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, intl, pdo_mysql
        tools: phpunit  # Utilisation de PHPUnit pour les tests unitaires

    - name: Install dependencies  # Installation des dépendances PHP
      run: rm composer.lock && composer install --prefer-dist --no-progress --no-suggest --no-interaction

    - name: Run unit tests  # Exécution des tests unitaires avec PHPUnit
      run: vendor/bin/phpunit

  security-scan:  # Définition du job pour l'analyse de sécurité
    runs-on: ubuntu-latest
    needs: build  # Dépend du job build pour s'exécuter après

    steps:  # Étapes du job pour l'analyse de sécurité
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Symfony CLI  # Installation de Symfony CLI pour l'analyse de sécurité
      run: |
        curl -sS https://get.symfony.com/cli/installer | bash
        sudo mv /home/runner/.symfony5/bin/symfony /usr/local/bin/symfony

    - name: Run security analysis  # Exécution de l'analyse de sécurité avec Symfony CLI
      run: symfony check:security
